{"meta":{"title":"shinran","subtitle":"","description":"","author":"le","url":"http://yoursite.com","root":"/"},"pages":[{"title":"","date":"2020-04-05T13:18:03.630Z","updated":"2020-02-26T07:13:19.000Z","comments":true,"path":"recent/index.html","permalink":"http://yoursite.com/recent/index.html","excerpt":"","text":""},{"title":"关于","date":"2020-04-05T14:18:42.559Z","updated":"2020-04-05T14:18:42.559Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2020-04-05T13:56:05.511Z","updated":"2020-04-05T13:56:05.511Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2020-04-05T13:57:00.327Z","updated":"2020-04-05T13:57:00.327Z","comments":true,"path":"mylist/index.html","permalink":"http://yoursite.com/mylist/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2020-04-05T13:56:16.427Z","updated":"2020-04-05T12:11:55.050Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"关于","date":"2020-04-07T10:43:10.089Z","updated":"2020-04-07T10:43:10.088Z","comments":true,"path":"sites/index.html","permalink":"http://yoursite.com/sites/index.html","excerpt":"","text":"关于我一只懒猪+一个小白QQ:434299971Email:4342/Users/parallei/Desktop/theme-settings/index.md99971@qq.com写博客的目的呢,一方面帮助自己巩固知识点,提高自己,另一方面帮助他人/Users/parallei/Desktop/blog/source/_posts/next.md/Users/parallei/Desktop/blog/source/_posts/next.md"}],"posts":[{"title":"mysql学习笔记","slug":"mysql学习笔记","date":"2020-04-07T10:44:56.000Z","updated":"2020-04-07T14:31:07.656Z","comments":true,"path":"2020/04/07/mysql学习笔记/","link":"","permalink":"http://yoursite.com/2020/04/07/mysql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"mysql概述mysql是一个关系型数据库管理系统","text":"mysql概述mysql是一个关系型数据库管理系统 什么是关系型数据库呢 关系型数据库就是依据关系模型来创建数据库 所谓关系模型就是’一对一、一对多、多对多’等关系模型,关系模型就是指二维表格模型,因而一个关系型数据库就是由二维表及其之间的联系组成的一个数据组织。 关系型数据库可以很好地储存一些关系模型的数据,我举个栗子,就比如一个老师对应多个学生的数据（’多对多’）,一本书有很多人参与写 这本书对应的作者也就是多个作者(‘一对多’),一本书对应一个出版日期(‘一对多’); 关系模型是我们生活中能经常遇见的模型,储存这类数据一版用关系型数据库 关系模型包括数据结构(数据储存的问题,二维表)、操作指令集合(SQL语句)、完整性约束（表内数据约束、表与表之间的约束)。 关系型数据库的特点 安全(因为储存在磁盘中) 易于理解（建立在关系模型上） 弊端 但不节省空间（因为建立在关系模型上,就要遵循某些规则,就比如数据中某字段值即使为空仍要分配空间) mysql 服务器的搭建 mac环境下安装mysql下载地址 选择你需要的mysql版本 下载后 在mac中-&gt;系统偏好设置-&gt;最下边点MySQL 在弹出页面中 打开mysql 服务器(点击start MySQL server) 安装完成后在终端输入一下命令 1mysql -u root -p 这时会出现Enter password: mac 下是没有密码提示的,直接输入就行了 然后输入你的密码。这时就能访问你数据库的服务器了。 打开终端 输入mysql -u root -p如果提示commod not found,我们还需要将mysql加入到系统环境变量中 1).进入/usr/local/mysql/bin查看是否有mysql（mac下默认的路径,如果没有进入系统偏好设置打开mysql的控制面板点击Configuration上面会有些路径) 2).在终端执行 vim ~/.bash_profile在该文件中添加mysql/bin的目录 PATH=$PATH:/usr/local/mysql/bin 添加完成后 摁下esc键 然后输入wq 保存最后在命令行输入source ~/.bash_profile 完美解决。 3)登录成功后会显示类似以下的 12345mysql Welcome to the MySQL monitor. Commands end with ; or \\g.Your MySQL connection id is 11Server version: 8.0.19 MySQL Community Server - GPLCopyright (c) 2000, 2020, Oracle and&#x2F;or its affiliates. All rights reserved. 退出可使用exit或者quit; mysql 基本用法 mysql语句结束已分号结尾mysql语句语法大小写不敏感但是很多人都用大写觉得更容易看出来,个人觉得小写更直观。 创建一个数据库 123456789create database 数据库名;还可以加一层判断 crate database if not exists 数据库名; 如果数据库不存在在则创建,存在则不创建 创建表的时候也对应也可以这样 如何查看呢? show databases; 查看所有数据库 如何使用呢？ use 数据库名; 如何查看数据中的所有表呢？先使用数据库use 数据库名然后在输入show tables; 显示数据表的属性、属性类型、主键信息、是否为null 默认值等其他信息 show column from 表名; 其实有很多可以查看的语句的 查看数据表的详细索引信息,包括primary key(主键)show index from; 删除某个数据库 drop database 数据库名; mysql的数据类型 概述:mysql支持多种分类、大概可以分为三类: 数值、日期/时间和字符(字符串)类型 数值类型 mysql 支持所有标准SQL数值类型 数值类型又分为整数和浮点数&amp;定点数 整数 类型 说明 储存需求(取值范围) tintint(m) 很小整数 1个字节 范围(-128~127) smallint (m) 小整数 2个字节 范围(-32768~32767) mediumint (m) 中等 3个字节 范围(-8388608~8388607) int(integer)(m) 普通 4个字节 范围(-2147483648~2147483647) Biting (m) 大整数 8个字节 范围(+-9.22*10的18次方) 浮点数 类型 说明 储存需求(取值范围) float(m,d) 单精度浮点数 8位精度(4字节) m总个数,d小数位 double(m,d) 双精度浮点数 16位精度(8字节) m总个数,d小数位 我举个栗子 设一个字段定义为float(6,3)，如果插入一个数123.45678,实际数据库里存的是123.457，但总个数还以实际为准，即6位。整数部分最大是3位，如果插入数12.123456，存储的是12.1234，如果插入12.12，存储的是12.1200。 定点数浮点数在数据库中存放的是近似值,而定点类型在数据库中存放的是精确值,declmal(m,d) 参数m&lt;65 是总个数,d&lt;30且d&lt; m 是小数位。 有待补","categories":[{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/categories/mysql/"}],"tags":[{"name":"技巧","slug":"技巧","permalink":"http://yoursite.com/tags/%E6%8A%80%E5%B7%A7/"},{"name":"数据库","slug":"数据库","permalink":"http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"}],"author":{"nick":"Anew","link":"https://www.github.com/quieta"}},{"title":"hexo的搭建","slug":"hexo","date":"2020-03-06T14:12:59.000Z","updated":"2020-04-06T02:56:57.223Z","comments":true,"path":"2020/03/06/hexo/","link":"","permalink":"http://yoursite.com/2020/03/06/hexo/","excerpt":"关于hexohexo是一个快速、简洁且高效的博客框架,Hexo支持Github Flavored Markdown的所有功能, 甚至可以整合Octopress的大多数插件. 并自己也拥有强大的插件系统","text":"关于hexohexo是一个快速、简洁且高效的博客框架,Hexo支持Github Flavored Markdown的所有功能, 甚至可以整合Octopress的大多数插件. 并自己也拥有强大的插件系统 Hexo同时也是GitHub上的开源项目,如果想要更加全面的了解Hexo可以到其官网了解更多的细节。 准备工作 下载Git 下载node.js并安装,默认会安装npm(教程) 查看版本 node -v nmp -v; （注:配置好node.js的环境变量） 下载安装hexo 方法(基于npm/cnpm包的Git命令安装) 输入:nmp install -g hexo（可能会等待很久） 使用安装cnpm淘宝镜像输入npm install -g cnpm --registry=https://registry.npm.taobao.org 安装完成后输入cnpm install -g hexo-cli 稍等片刻就安装好了 hexo -v 查看版本号 本地搭建hexo静态博客 新建一个文件夹（如blog\\自己定义） 点击文件夹,右击运行Git Bash here,输入hexo init(生成模块)1234567生成完成后，指定文件夹目录下有：node_modules: 依赖包public：存放生成的页面scaffolds：生成文章的一些模板source：用来存放你的文章themes：主题** _config.yml: 博客的配置文件** 生成完之后 输入 hexo server 运行程序,就可以访问本地localhost:4000可以看到博客已经搭建完成(如果报错的话,大概就是端口号被占用输入hexo s -p 5000 更改端口号) 主题安装cd 主题目录下 下载主题(以next主题为例)(注:可以去 输入 git clone https://github.com/iissnan/hexo-theme-next.git（主题的地址） 打开站点下的_config.yml配置文件 1234# Extensions## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;theme: next(更改为自己下载的主题名字) next主题的使用 安装好主题后主题文件夹里面会有一个主题配置_config配置文件 进入_config后找到Schemes里面会有4不同类型的主题样式(依个人爱好自行选择) 关于hexo-next主题下的一些个性化配置，请参考:(Next主题配置)[] 补注hexo g hexo s （本地查看)localhost:4000 hexo g(生成文件)hexo d 推到远端github中hexo clean 清除缓存","categories":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"技巧","slug":"技巧","permalink":"http://yoursite.com/tags/%E6%8A%80%E5%B7%A7/"}],"author":{"nick":"Anew","link":"https://www.github.com/quieta"}},{"title":"next主题配置以及如何部署到github上","slug":"next","date":"2020-03-06T14:12:59.000Z","updated":"2020-04-07T10:43:01.658Z","comments":true,"path":"2020/03/06/next/","link":"","permalink":"http://yoursite.com/2020/03/06/next/","excerpt":"next主题配置","text":"next主题配置 通过修改next主题下的_config.yml的scheme字段，配置不同的风格。 12345# Schemesscheme: Muse# scheme: Mist# scheme: Pisces# scheme: Gemini 菜单设置通过修改next主题下的_config.yml的menu字段，选定显示的菜单项。 1234567menu: home: &#x2F; categories: &#x2F;categories about: &#x2F;about archives: &#x2F;archives tags: &#x2F;tags #commonweal: &#x2F;404.html 其中，home代表主页，categories代表分类页，about代表关于页面，archives代表归档页，commonweal代表404页面（page not found时候显示的页面）。 页面汉化next主题下的language文件夹下的文件进行修改，若当前语言是简体中文，直接修改language/zh-Hans.yml里的对应字段即可。 头像设置在主题下的source/images/下放置头像文件avatar.png即可。 侧栏设置侧栏设置包括：侧栏位置、侧栏显示与否、文章间距、返回顶部按钮等等 12345678910111213141516sidebar:# Sidebar Position - 侧栏位置（只对Pisces | Gemini两种风格有效） position: left &#x2F;&#x2F;靠左放置 #position: right &#x2F;&#x2F;靠右放置# Sidebar Display - 侧栏显示时机（只对Muse | Mist两种风格有效） #display: post &#x2F;&#x2F;默认行为，在文章页面（拥有目录列表）时显示 display: always &#x2F;&#x2F;在所有页面中都显示 #display: hide &#x2F;&#x2F;在所有页面中都隐藏（可以手动展开） #display: remove &#x2F;&#x2F;完全移除 offset: 12 &#x2F;&#x2F;文章间距（只对Pisces | Gemini两种风格有效） b2t: false &#x2F;&#x2F;返回顶部按钮（只对Pisces | Gemini两种风格有效） scrollpercent: true &#x2F;&#x2F;返回顶部按钮的百分比 设置RSS1、先安装 hexo-generator-feed 插件 npm install hexo-generator-feed --save2、打开 站点配置文件 找到Extensions在下面添加 123456789# RSS订阅feed: type: atom path: atom.xml limit: 20 hub: content: content_limit: 140 content_limit_delim: &#39; &#39; 3、打开 主题配置文件 找到rss,设置为 rss: /atom.xml 添加分类模块の添加标签模块即其他模块1、新建一个分类页面 hexo new page categories2、你会发现你的source文件夹下有了categorcies/index.md，打开index.md文件将title设置title: 分类3、打开 主题配置文件 找到menu，将categorcies取消注释4、把文章归入分类只需在文章的顶部标题下方添加categories字段，即可自动创建分类名并加入对应的类中举个栗子： 12title: 分类文章标题categories: 分类名 1、新建一个标签页面 hexo new page tags2、你会发现你的source文件夹下有了tags/index.md，打开index.md文件将title设置为title: 标签3、打开 主题配置文件 找到menu，将tags取消注释4、把文章添加标签只需在文章的顶部标题下方添加tags字段，即可自动创建标签名并归入对应的标签中举个栗子： 12345title: 标签文章标题tags: - 标签1- 标签2... 其他模块也类似添加关于模块1、新建一个关于页面hexo new page about2、你会发现你的source文件夹下有了about/index.md，打开index.md文件即可编辑关于你的信息，以随便编辑。3、打开 主题配置文件 找到menu，将about取消注释 添加搜索功能1、安装 hexo-generator-searchdb 插件npm install hexo-generator-searchdb --save2、打开 站点配置文件 找到Extensions在下面添加 123456# 搜索search: path: search.xml field: post format: html limit: 10000 3、打开 主题配置文件 找到Local search，将enable设置为true 添加阅读全文按钮因为在你的博客主页的文章会有很多内容，如果你想让你的文章只显示一部分，多余的可以点击阅读全文来查看，那么你需要在你的文章中添加&lt;!--more--&gt; 修改作者头像并旋转打开\\themes\\next\\source\\css_common\\components\\sidebar\\sidebar-author.styl，在里面添加如下代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; &#x2F;* 头像圆形 *&#x2F; border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; &#x2F;* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*&#x2F; &#x2F;* 鼠标经过头像旋转360度 *&#x2F; -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out;&#125;img:hover &#123; &#x2F;* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*&#x2F; &#x2F;* 鼠标经过头像旋转360度 *&#x2F; -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;&#x2F;* Z 轴旋转动画 *&#x2F;@-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(-360deg); &#125;&#125;@-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(-360deg); &#125;&#125;@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125; 如何自己给博客添加样式打开blog/themes/hexo-theme-next/source/css/_custom/custom.styl可自行修改样式 如果样式应用不上就在样式后面添加 !important即可 将博客与Github关联在github上创建仓库 首先注册一个github账号，注册时填写的username要谨慎 创建一个储存库，名称规则为: 1username.github.io 设置Git的user name和email 12git config --global user.name &quot;quieta&quot;git config --global user.email &quot;&#x3D;434299971@qq.com&quot; 为github 设置ssh keys 检查极其上是否已经存在id_rsa.pub文件 1ls -al ~&#x2F;.ssh 不存在的话使其生成 ssh-keygen -t rsa -C &quot;434299971@163.com一路回车即可。 生成完后会提示路径 找到路径对应位置打开复制id_rsa.pub文件内容，在github的settings中，点选SSH keys，添加一个key，将内容粘贴进去。 测试是否添加成功，在刚刚的机器上输入 1ssh -T git@github.com 配置Deployment 编辑hexo/config.yml文件如下： 1234deploy: type: git repository:https:&#x2F;&#x2F;github.com&#x2F;yourname&#x2F;yourname.github.io.git branch: master 安装依赖 1npm install hexo-deployer-git –save 其中repository的地址就是你刚刚创建的仓库的https地址。(注:每个属性值前面记得加空格，不然会报错的) 部署 12hexo g 生成hexo d 部署到github 部署成功后，可通过 http://quieta.github.io 进行访问，其中将quieta替换为你自己的username即可不过访问速度可能会很慢 解决github访问很慢访问很慢的原因:访问很慢的原因: dns解析的问题,即github的CDN域名遭到了DNS污染，导致无法连接使用 github 的加速分发服务器，才使得国内访问速度很慢。解决办法1.修改本地host文件,进行绕过cdn直接解析 查询github的ip地址 ip查询打开之后 查询github.com以及github.global.ssl.fastly.net2.将这两个host添加到本地host文件格式如下 12查询到的ip github.com 查询到的ip github.global.ssl.fastly.net 然后进入 C:\\Windows\\System32\\drivers\\etc\\host 注意使用管理员打开,否则无法保存3.保存之后最好刷新一下本地的dns缓存win + r -&gt;cmd-&gt;ipconfig /flushdns 然后再次尝试访问github,发现这次的打开速度快了很多 ok,问题解决!","categories":[{"name":"next","slug":"next","permalink":"http://yoursite.com/categories/next/"}],"tags":[{"name":"懒","slug":"懒","permalink":"http://yoursite.com/tags/%E6%87%92/"}]}],"categories":[{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/categories/mysql/"},{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/categories/hexo/"},{"name":"next","slug":"next","permalink":"http://yoursite.com/categories/next/"}],"tags":[{"name":"技巧","slug":"技巧","permalink":"http://yoursite.com/tags/%E6%8A%80%E5%B7%A7/"},{"name":"数据库","slug":"数据库","permalink":"http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"},{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"懒","slug":"懒","permalink":"http://yoursite.com/tags/%E6%87%92/"}]}